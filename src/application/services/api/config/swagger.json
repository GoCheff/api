{
  "openapi": "3.0.0",
  "info": {
    "title": "GoCheff API",
    "version": "1.0.0",
    "contact": {
      "name": "Vin√≠cius Gugelmin",
      "email": "vinigugelmin@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local server"
    },
    {
      "url": "https://www.gocheff.systems/api",
      "description": "Production server"
    },
    {
      "url": "https://www.gocheff.systems/dev/api",
      "description": "Development server"
    }
  ],
  "tags": [],
  "components": {
    "schemas": {
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "User id"
          },
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User hashed password"
          },
          "gender": {
            "type": "string",
            "pattern": "^(female|male|other|preferNotToSay)$",
            "description": "User gender"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "User update date"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "User deletion date"
          }
        }
      },
      "AdminSignInBodySchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "loremipsum@email.com",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "123456",
            "description": "User password"
          }
        }
      },
      "AdminCheffApproveBodySchema": {
        "type": "object",
        "properties": {
          "adminPassword": {
            "type": "string",
            "format": "password",
            "description": "Admin password"
          }
        }
      },
      "AdminCheffRefuseBodySchema": {
        "type": "object",
        "properties": {
          "adminPassword": {
            "type": "string",
            "format": "password",
            "description": "Admin password"
          }
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Cart id"
          },
          "customerId": {
            "type": "number",
            "description": "Cart customer id"
          },
          "status": {
            "type": "string",
            "pattern": "^(open|sent|approved|rejected|paid|canceled|delivered)$",
            "description": "Cart status"
          },
          "locale": {
            "type": "string",
            "description": "Cart locale"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time",
            "description": "Cart event date"
          },
          "phoneContact": {
            "type": "string",
            "description": "Cart phone contact"
          },
          "observation": {
            "type": "string",
            "description": "Cart observation"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Cart creation date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Cart update date"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Cart deletion date"
          }
        }
      },
      "Cheff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "User id"
          },
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User hashed password"
          },
          "gender": {
            "type": "string",
            "pattern": "^(female|male|other|preferNotToSay)$",
            "description": "User gender"
          },
          "mainCuisine": {
            "type": "string",
            "description": "User main cuisine"
          },
          "city": {
            "type": "string",
            "description": "User city"
          },
          "registerStatus": {
            "type": "string",
            "pattern": "^(pending|approved|rejected)$",
            "description": "User register status"
          },
          "registerReason": {
            "type": "string",
            "description": "User register reason"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "User update date"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "User deletion date"
          }
        }
      },
      "CheffRequestRegistrationBodySchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User password"
          },
          "gender": {
            "type": "string",
            "pattern": "^(female|male|other|preferNotToSay)$",
            "description": "User gender"
          },
          "mainCuisine": {
            "type": "string",
            "description": "User main cuisine"
          },
          "city": {
            "type": "string",
            "description": "User city"
          },
          "registerReason": {
            "type": "string",
            "description": "User register reason"
          }
        }
      },
      "CheffSignInBodySchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User password"
          }
        }
      },
      "CheffFoodPlateCreateBodySchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Food plate name"
          },
          "description": {
            "type": "string",
            "description": "Food plate description"
          },
          "imageUrl": {
            "type": "string",
            "description": "Food plate image url"
          },
          "price": {
            "type": "number",
            "description": "Food plate price"
          },
          "minServe": {
            "type": "number",
            "description": "Food plate min serve"
          },
          "maxServe": {
            "type": "number",
            "description": "Food plate max serve"
          },
          "cookTime": {
            "type": "number",
            "description": "Food plate cook time"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "User id"
          },
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User hashed password"
          },
          "gender": {
            "type": "string",
            "pattern": "^(female|male|other|preferNotToSay)$",
            "description": "User gender"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "User update date"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "User deletion date"
          }
        }
      },
      "CustomerSignInBodySchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User password"
          }
        }
      },
      "CustomerSignUpBodySchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User password"
          },
          "gender": {
            "type": "string",
            "pattern": "^(female|male|other|preferNotToSay)$",
            "description": "User gender"
          }
        }
      },
      "CustomerCartItemsUpdateOrCreateBodySchema": {
        "type": "object",
        "properties": {
          "cheffId": {
            "type": "number",
            "description": "Cheff id"
          },
          "quantity": {
            "type": "number",
            "description": "Food plate quantity"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/admin/cheffs/pending": {
      "get": {
        "description": "Get all pending cheffs",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "All pending cheffs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cheff"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/cheffs/approved": {
      "get": {
        "description": "Get all approved cheffs",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "All approved cheffs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cheff"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/cheffs/approve/{id}": {
      "patch": {
        "description": "Approve cheff",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Admin"],
        "parameters": [
          {
            "id": null,
            "name": "Cheff id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Cheff approved"
          },
          "404": {
            "description": "Cheff or admin not found"
          },
          "422": {
            "description": "Invalid admin password, cheff already approved or cheff already rejected"
          }
        }
      }
    },
    "/admin/cheffs/refuse/{id}": {
      "patch": {
        "description": "Refuse cheff",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Admin"],
        "parameters": [
          {
            "id": null,
            "name": "Cheff id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminCheffRefuseBodySchema"
              }
            }
          },
          "responses": {
            "200": {
              "description": "Cheff refused"
            },
            "404": {
              "description": "Cheff or admin not found"
            },
            "422": {
              "description": "Invalid admin password, cheff already approved or cheff already rejected"
            }
          }
        }
      }
    },
    "/admin/sign-in": {
      "post": {
        "description": "Sign in as admin",
        "tags": ["Admin"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminSignInBodySchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin signed in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/Admin",
                      "description": "Admin"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Admin not found or password does not match"
          }
        }
      }
    },
    "/admin/auth": {
      "get": {
        "description": "Authenticate as admin",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "Authenticated as admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/Admin",
                      "description": "Admin"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cheffs/carts": {
      "get": {
        "description": "Get all carts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Cheff"],
        "responses": {
          "200": {
            "description": "All carts with cheff food plates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cheffs/carts/sent": {
      "get": {
        "description": "Get all carts sent",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Cheff"],
        "responses": {
          "200": {
            "description": "All carts with cheff food plates sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cheffs/carts/{id}/approve": {
      "patch": {
        "description": "Approve a cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Cheff"],
        "parameters": [
          {
            "id": null,
            "name": "Cart id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart approved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          },
          "409": {
            "description": "Cart is not sent"
          }
        }
      }
    },
    "/cheffs/carts/{id}/refuse": {
      "patch": {
        "description": "Refuse a cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Cheff"],
        "responses": {
          "200": {
            "description": "Cart refused",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          },
          "409": {
            "description": "Cart is not sent"
          }
        }
      }
    },
    "/cheffs/food-plates": {
      "post": {
        "description": "Create a new food plate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Cheff"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheffFoodPlateCreateBodySchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Food plate created"
          },
          "404": {
            "description": "Cheff not found"
          }
        }
      }
    },
    "/cheffs/request-registration": {
      "post": {
        "tags": ["Cheff"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheffRequestRegistrationBodySchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cheff registration requested successfully"
          },
          "422": {
            "description": "Cheff already exists"
          }
        }
      }
    },
    "/cheffs/sign-in": {
      "post": {
        "description": "Sign in as cheff",
        "tags": ["Cheff"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheffSignInBodySchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cheff signed in"
          },
          "404": {
            "description": "Cheff not found or password does not match"
          }
        }
      }
    },
    "/cheffs/auth": {
      "get": {
        "description": "Authenticate as cheff",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Cheff"],
        "responses": {
          "200": {
            "description": "Authenticated as cheff",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/Cheff",
                      "description": "Cheff"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/customers/cart-items/{id}": {
      "put": {
        "description": "Update or create a cart item",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Customer"],
        "parameters": [
          {
            "id": null,
            "name": "Food plate id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCartItemsUpdateOrCreateBodySchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart item updated or created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": {
            "description": "Food plate from another cheff"
          },
          "404": {
            "description": "Food plate not found"
          }
        }
      }
    },
    "/customers/cheffs": {
      "get": {
        "description": "Get all cheffs",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Customer"],
        "responses": {
          "200": {
            "description": "Cheffs found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/Cheff"
                }
              }
            }
          }
        }
      }
    },
    "/customers/cheffs/{id}": {
      "get": {
        "description": "Get cheff by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Customer"],
        "parameters": [
          {
            "id": null,
            "description": "Cheff id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Cheff found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cheff"
                }
              }
            }
          },
          "404": {
            "description": "Cheff or admin not found"
          }
        }
      }
    },
    "/customers/sign-up": {
      "post": {
        "description": "Sign up as customer",
        "tags": ["Customer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSignUpBodySchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer signed up"
          },
          "422": {
            "description": "Email already in use"
          }
        }
      }
    },
    "/customers/sign-in": {
      "post": {
        "description": "Sign in as customer",
        "tags": ["Customer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSignInBodySchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer signed in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/Customer",
                      "description": "Customer"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found or password does not match"
          }
        }
      }
    },
    "/customers/auth": {
      "get": {
        "description": "Authenticate as customer",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Customer"],
        "responses": {
          "200": {
            "description": "Authenticated as customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "GoCheff API",
        "tags": ["Config"],
        "responses": {
          "200": {
            "description": "Returns a message with the API name"
          }
        }
      }
    }
  }
}
